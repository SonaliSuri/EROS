{"ast":null,"code":"var isText = RegExp(/^[A-Z ]+$/i);\nvar isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\nvar isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/); // us\n\nvar isZip = RegExp(/^[0-9]{5}([- /]?[0-9]{4})?$/); // us\n\nvar isNumber = RegExp(/^\\d+$/);\nexport default function formValidation(name, value, schema) {\n  var _schema$name = schema[name],\n      validate = _schema$name.validate,\n      minLength = _schema$name.minLength,\n      maxLength = _schema$name.maxLength;\n  var error = \"\";\n  if (minLength && value.length < minLength) error = \"Minimum of \".concat(minLength, \" characters are required.\");else if (maxLength && value.length > maxLength) error = \"Maximum length of \".concat(maxLength, \" exceeded!\");\n  if (!validate) return;\n\n  switch (validate) {\n    case \"text\":\n      if (!isText.test(value)) error = \"This field accepts text only.\";\n      break;\n\n    case \"number\":\n      if (!isNumber.test(value)) error = \"This field accepts numbers only.\";\n      break;\n\n    case \"email\":\n      if (!isEmail.test(value)) error = \"Please enter a valid email address.\";\n      break;\n\n    case \"phone\":\n      if (!isPhone.test(value)) error = \"Please enter a valid phone number. i.e: xxx-xxx-xxxx\";\n      break;\n\n    case \"zip\":\n      if (!isZip.test(value)) error = \"Please enter a valid zip code.\";\n      break;\n\n    case \"checkbox\":\n      if (!value) error = \"Please select a value.\";\n      break;\n\n    default:\n      break;\n  }\n\n  return error;\n}","map":{"version":3,"sources":["/Users/sonalisuri/Documents/Home_Page/src/views/Helper/formValidation.js"],"names":["isText","RegExp","isEmail","isPhone","isZip","isNumber","formValidation","name","value","schema","validate","minLength","maxLength","error","length","test"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,MAAM,CAAC,YAAD,CAArB;AACA,IAAMC,OAAO,GAAGD,MAAM,CAAC,0CAAD,CAAtB;AACA,IAAME,OAAO,GAAGF,MAAM,CAAC,uCAAD,CAAtB,C,CAAgE;;AAChE,IAAMG,KAAK,GAAGH,MAAM,CAAC,6BAAD,CAApB,C,CAAoD;;AACpD,IAAMI,QAAQ,GAAGJ,MAAM,CAAC,OAAD,CAAvB;AAEA,eAAe,SAASK,cAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6C;AAAA,qBACfA,MAAM,CAACF,IAAD,CADS;AAAA,MAClDG,QADkD,gBAClDA,QADkD;AAAA,MACxCC,SADwC,gBACxCA,SADwC;AAAA,MAC7BC,SAD6B,gBAC7BA,SAD6B;AAE1D,MAAIC,KAAK,GAAG,EAAZ;AAEA,MAAIF,SAAS,IAAIH,KAAK,CAACM,MAAN,GAAeH,SAAhC,EAA2CE,KAAK,wBAAiBF,SAAjB,8BAAL,CAA3C,KACK,IAAIC,SAAS,IAAIJ,KAAK,CAACM,MAAN,GAAeF,SAAhC,EAA2CC,KAAK,+BAAwBD,SAAxB,eAAL;AAChD,MAAI,CAACF,QAAL,EAAe;;AAEf,UAAQA,QAAR;AACE,SAAK,MAAL;AACE,UAAI,CAACV,MAAM,CAACe,IAAP,CAAYP,KAAZ,CAAL,EAAyBK,KAAK,GAAG,+BAAR;AACzB;;AAEF,SAAK,QAAL;AACE,UAAI,CAACR,QAAQ,CAACU,IAAT,CAAcP,KAAd,CAAL,EAA2BK,KAAK,GAAG,kCAAR;AAC3B;;AAEF,SAAK,OAAL;AACE,UAAI,CAACX,OAAO,CAACa,IAAR,CAAaP,KAAb,CAAL,EAA0BK,KAAK,GAAG,qCAAR;AAC1B;;AAEF,SAAK,OAAL;AACE,UAAI,CAACV,OAAO,CAACY,IAAR,CAAaP,KAAb,CAAL,EAA0BK,KAAK,GAAG,sDAAR;AAC1B;;AAEF,SAAK,KAAL;AACE,UAAI,CAACT,KAAK,CAACW,IAAN,CAAWP,KAAX,CAAL,EAAwBK,KAAK,GAAG,gCAAR;AACxB;;AAEF,SAAK,UAAL;AACE,UAAI,CAACL,KAAL,EAAYK,KAAK,GAAG,wBAAR;AACZ;;AAEF;AACE;AA1BJ;;AA6BA,SAAOA,KAAP;AACD","sourcesContent":["const isText = RegExp(/^[A-Z ]+$/i)\nconst isEmail = RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)\nconst isPhone = RegExp(/^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4,6})$/) // us\nconst isZip = RegExp(/^[0-9]{5}([- /]?[0-9]{4})?$/) // us\nconst isNumber = RegExp(/^\\d+$/)\n\nexport default function formValidation(name, value, schema) {\n  const { validate, minLength, maxLength } = schema[name]\n  let error = \"\"\n\n  if (minLength && value.length < minLength) error = `Minimum of ${minLength} characters are required.`\n  else if (maxLength && value.length > maxLength) error = `Maximum length of ${maxLength} exceeded!`\n  if (!validate) return\n\n  switch (validate) {\n    case \"text\":\n      if (!isText.test(value)) error = \"This field accepts text only.\"\n      break\n\n    case \"number\":\n      if (!isNumber.test(value)) error = \"This field accepts numbers only.\"\n      break\n\n    case \"email\":\n      if (!isEmail.test(value)) error = \"Please enter a valid email address.\"\n      break\n\n    case \"phone\":\n      if (!isPhone.test(value)) error = \"Please enter a valid phone number. i.e: xxx-xxx-xxxx\"\n      break\n\n    case \"zip\":\n      if (!isZip.test(value)) error = \"Please enter a valid zip code.\"\n      break\n\n    case \"checkbox\":\n      if (!value) error = \"Please select a value.\"\n      break\n\n    default:\n      break\n  }\n\n  return error\n}\n"]},"metadata":{},"sourceType":"module"}