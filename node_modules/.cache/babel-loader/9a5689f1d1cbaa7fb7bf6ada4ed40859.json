{"ast":null,"code":"var _jsxFileName = \"/Users/sonalisuri/Desktop/erosc/Home_Page/src/views/examples/TableGrid.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nfunction getFullName(params) {\n  return \"\".concat(params.getValue('firstName') || '', \" \").concat(params.getValue('lastName') || '');\n}\n\nvar columns = [{\n  field: 'id',\n  headerName: 'Form Number',\n  width: 140\n}, {\n  field: 'primary_owner',\n  headerName: 'Primary Owner',\n  width: 140\n}, {\n  field: 'ship_type',\n  headerName: 'Ship Type',\n  width: 140\n}, {\n  field: 'proposed_ship_name',\n  headerName: 'Ship Name',\n  width: 140\n}, {\n  field: 'port',\n  headerName: 'Port',\n  width: 140\n}, {\n  field: 'registration_date',\n  headerName: 'Registration Date',\n  width: 170\n}, {\n  field: 'ship_lenght',\n  headerName: 'Ship Length',\n  width: 140\n}];\nvar rows = [{\n  \"id\": \"No records\"\n}];\nexport default function ValueGetterGrid(props) {\n  // Default options are marked with *\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"email\": props.values.detail\n  });\n  console.log(raw);\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  console.log(raw);\n  var proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n  fetch(\"https://ferrous-portal-295000.wl.r.appspot.com/get_grid_data\", requestOptions).then(response => response.json()).then(data => {\n    rows = data; // console.log(data); // JSON data parsed by `data.json()` call\n  }).catch(error => console.log('error', error));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 250,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sonalisuri/Desktop/erosc/Home_Page/src/views/examples/TableGrid.js"],"names":["React","DataGrid","getFullName","params","getValue","columns","field","headerName","width","rows","ValueGetterGrid","props","myHeaders","Headers","append","raw","JSON","stringify","values","detail","console","log","requestOptions","method","headers","body","redirect","proxyurl","fetch","then","response","json","data","catch","error","height"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,mBAAUA,MAAM,CAACC,QAAP,CAAgB,WAAhB,KAAgC,EAA1C,cACED,MAAM,CAACC,QAAP,CAAgB,UAAhB,KAA+B,EADjC;AAGD;;AAED,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,IAAT;AAAeC,EAAAA,UAAU,EAAE,aAA3B;AAA0CC,EAAAA,KAAK,EAAE;AAAjD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,UAAU,EAAE,eAAtC;AAAuDC,EAAAA,KAAK,EAAE;AAA9D,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,UAAU,EAAE,WAAlC;AAA+CC,EAAAA,KAAK,EAAE;AAAtD,CAHc,EAId;AAAEF,EAAAA,KAAK,EAAE,oBAAT;AAA+BC,EAAAA,UAAU,EAAE,WAA3C;AAAwDC,EAAAA,KAAK,EAAE;AAA/D,CAJc,EAKd;AAAEF,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,UAAU,EAAE,MAA7B;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CALc,EAMd;AAAEF,EAAAA,KAAK,EAAE,mBAAT;AAA8BC,EAAAA,UAAU,EAAE,mBAA1C;AAA+DC,EAAAA,KAAK,EAAE;AAAtE,CANc,EAOd;AAAEF,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,UAAU,EAAE,aAApC;AAAmDC,EAAAA,KAAK,EAAE;AAA1D,CAPc,CAAhB;AAYA,IAAIC,IAAI,GAER,CACI;AAAI,QAAM;AAAV,CADJ,CAFA;AAOA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE3C;AAGA,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEQ,MAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAC,aAAQN,KAAK,CAACO,MAAN,CAAaC;AAAtB,GAAf,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,MAAIO,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAEZ,SAFU;AAGnBa,IAAAA,IAAI,EAAEV,GAHa;AAInBW,IAAAA,QAAQ,EAAE;AAJS,GAArB;AAMAN,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,MAAMY,QAAQ,GAAG,sCAAjB;AACAC,EAAAA,KAAK,CAAC,8DAAD,EAAiEN,cAAjE,CAAL,CACGO,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZvB,IAAAA,IAAI,GAACuB,IAAL,CADY,CAEf;AACA,GALD,EAOGC,KAPH,CAOSC,KAAK,IAAId,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,KAArB,CAPlB;AAYV,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAe3B,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEC,IAAhB;AAAsB,IAAA,OAAO,EAAEJ,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nfunction getFullName(params) {\n  return `${params.getValue('firstName') || ''} ${\n    params.getValue('lastName') || ''\n  }`;\n}\n\nconst columns = [\n  { field: 'id', headerName: 'Form Number', width: 140 },\n  { field: 'primary_owner', headerName: 'Primary Owner', width: 140 },\n  { field: 'ship_type', headerName: 'Ship Type', width: 140 },\n  { field: 'proposed_ship_name', headerName: 'Ship Name', width: 140 },\n  { field: 'port', headerName: 'Port', width: 140 },\n  { field: 'registration_date', headerName: 'Registration Date', width: 170 },\n  { field: 'ship_lenght', headerName: 'Ship Length', width: 140 },\n  \n];\n\n\nvar rows = \n\n[\n    {   \"id\": \"No records\",\n        \n    }\n]\nexport default function ValueGetterGrid(props) {\n\n    // Default options are marked with *\n \n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n        \n            var raw = JSON.stringify({\"email\":props.values.detail});\n            console.log(raw);\n            var requestOptions = {\n              method: 'POST',\n              headers: myHeaders,\n              body: raw,\n              redirect: 'follow'\n            };\n            console.log(raw);\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n            fetch(\"https://ferrous-portal-295000.wl.r.appspot.com/get_grid_data\", requestOptions)\n              .then(response => response.json())\n              .then(data => {\n                rows=data\n             // console.log(data); // JSON data parsed by `data.json()` call\n            })\n              \n              .catch(error => console.log('error', error));\n\n\n\n\n  return (\n    <div style={{ height: 250, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}