{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sonalisuri/Desktop/erosc/Home_Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sonalisuri/Desktop/erosc/Home_Page/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/sonalisuri/Desktop/erosc/Home_Page/src/views/examples/TableGrid.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nfunction getFullName(params) {\n  return \"\".concat(params.getValue('firstName') || '', \" \").concat(params.getValue('lastName') || '');\n}\n\nvar columns = [{\n  field: 'firstName',\n  headerName: 'First name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last name',\n  width: 130\n}, {\n  field: 'fullName',\n  headerName: 'Full name',\n  width: 160,\n  valueGetter: getFullName,\n  sortComparator: (v1, v2, cellParams1, cellParams2) => getFullName(cellParams1).localeCompare(getFullName(cellParams2))\n}];\nvar rows = [];\n\nfunction testing() {\n  return _testing.apply(this, arguments);\n}\n\nfunction _testing() {\n  _testing = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var myHeaders, row, raw, requestOptions, proxyurl;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n            raw = JSON.stringify({\n              \"email\": \"sosuri@ucsc.edu\"\n            });\n            console.log(raw);\n            requestOptions = {\n              method: 'POST',\n              headers: myHeaders,\n              body: raw,\n              redirect: 'follow'\n            };\n            console.log(raw);\n            proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n            _context.next = 9;\n            return fetch(proxyurl + \"https://ferrous-portal-295000.wl.r.appspot.com/get_grid_data\", requestOptions).then(token => {\n              return token.json();\n            }).catch(error => console.log('error', error));\n\n          case 9:\n            row = _context.sent;\n            return _context.abrupt(\"return\", row);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _testing.apply(this, arguments);\n}\n\nrows = testing();\nconsole.log(rows);\nexport default function ValueGetterGrid() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: [],\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/sonalisuri/Desktop/erosc/Home_Page/src/views/examples/TableGrid.js"],"names":["React","DataGrid","getFullName","params","getValue","columns","field","headerName","width","valueGetter","sortComparator","v1","v2","cellParams1","cellParams2","localeCompare","rows","testing","myHeaders","Headers","append","raw","JSON","stringify","console","log","requestOptions","method","headers","body","redirect","proxyurl","fetch","then","token","json","catch","error","row","ValueGetterGrid","height"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,mBAAUA,MAAM,CAACC,QAAP,CAAgB,WAAhB,KAAgC,EAA1C,cACED,MAAM,CAACC,QAAP,CAAgB,UAAhB,KAA+B,EADjC;AAGD;;AAED,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,UAAU,EAAE,YAAlC;AAAgDC,EAAAA,KAAK,EAAE;AAAvD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,UAAU,EAAE,WAAjC;AAA8CC,EAAAA,KAAK,EAAE;AAArD,CAFc,EAGd;AACEF,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,UAAU,EAAE,WAFd;AAGEC,EAAAA,KAAK,EAAE,GAHT;AAIEC,EAAAA,WAAW,EAAEP,WAJf;AAKEQ,EAAAA,cAAc,EAAE,CAACC,EAAD,EAAKC,EAAL,EAASC,WAAT,EAAsBC,WAAtB,KACdZ,WAAW,CAACW,WAAD,CAAX,CAAyBE,aAAzB,CAAuCb,WAAW,CAACY,WAAD,CAAlD;AANJ,CAHc,CAAhB;AAaA,IAAIE,IAAI,GAAC,EAAT;;SAEeC,O;;;;;sEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACIC,YAAAA,SADJ,GACgB,IAAIC,OAAJ,EADhB;AAEAD,YAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AAEYC,YAAAA,GAJZ,GAIkBC,IAAI,CAACC,SAAL,CAAe;AAAC,uBAAQ;AAAT,aAAf,CAJlB;AAKQC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACIK,YAAAA,cANZ,GAM6B;AACnBC,cAAAA,MAAM,EAAE,MADW;AAEnBC,cAAAA,OAAO,EAAEV,SAFU;AAGnBW,cAAAA,IAAI,EAAER,GAHa;AAInBS,cAAAA,QAAQ,EAAE;AAJS,aAN7B;AAYQN,YAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACMU,YAAAA,QAbd,GAayB,sCAbzB;AAAA;AAAA,mBAemBC,KAAK,CAACD,QAAQ,GAAC,8DAAV,EAA0EL,cAA1E,CAAL,CAERO,IAFQ,CAEHC,KAAK,IAAI;AAAE,qBAAOA,KAAK,CAACC,IAAN,EAAP;AAAqB,aAF7B,EAGRC,KAHQ,CAGFC,KAAK,IAAIb,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBY,KAArB,CAHP,CAfnB;;AAAA;AAeQC,YAAAA,GAfR;AAAA,6CAmBeA,GAnBf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAqBAtB,IAAI,GAAIC,OAAO,EAAf;AACAO,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,eAAe,SAASuB,eAAT,GAA2B;AACxC,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAehC,MAAAA,KAAK,EAAE;AAAtB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAoB,IAAA,OAAO,EAAEH,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\n\nfunction getFullName(params) {\n  return `${params.getValue('firstName') || ''} ${\n    params.getValue('lastName') || ''\n  }`;\n}\n\nconst columns = [\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    width: 160,\n    valueGetter: getFullName,\n    sortComparator: (v1, v2, cellParams1, cellParams2) =>\n      getFullName(cellParams1).localeCompare(getFullName(cellParams2)),\n  },\n];\n\nvar rows=[];\n\nasync function testing() {\nvar myHeaders = new Headers();\nmyHeaders.append(\"Content-Type\", \"application/json\");\n    var row;\n        var raw = JSON.stringify({\"email\":\"sosuri@ucsc.edu\"});\n        console.log(raw);\n        var requestOptions = {\n          method: 'POST',\n          headers: myHeaders,\n          body: raw,\n          redirect: 'follow'\n        };\n        console.log(raw);\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\n        row= await fetch(proxyurl+\"https://ferrous-portal-295000.wl.r.appspot.com/get_grid_data\", requestOptions)\n          \n          .then(token => { return token.json() } )\n          .catch(error => console.log('error', error));\n        return row;\n    }\nrows=   testing();\nconsole.log(rows);\nexport default function ValueGetterGrid() {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={[]} columns={columns} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}