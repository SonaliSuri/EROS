{"ast":null,"code":"var _jsxFileName = \"/Users/sonalisuri/Desktop/erosc/Home_Page/src/views/examples/TableGrid.js\";\nimport * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CustomizedTables from './TabularGrid';\n\nfunction getFullName(params) {\n  return \"\".concat(params.getValue('firstName') || '', \" \").concat(params.getValue('lastName') || '');\n}\n\nvar columns = [{\n  field: 'id',\n  headerName: 'Form Number',\n  width: 140\n}, {\n  field: 'primary_owner',\n  headerName: 'Username',\n  width: 140\n}, {\n  field: 'ship_type',\n  headerName: 'Ship Type',\n  width: 140\n}, {\n  field: 'proposed_ship_name',\n  headerName: 'Ship Name',\n  width: 140\n}, {\n  field: 'port',\n  headerName: 'Port',\n  width: 140\n}, {\n  field: 'registration_date',\n  headerName: 'Registration Date',\n  width: 170\n}, {\n  field: 'ship_lenght',\n  headerName: 'Ship Length',\n  width: 140\n}];\nvar rows = [{\n  \"id\": \"No records\"\n}];\n\nclass ValueGetterGrid extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    // Default options are marked with *\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": \"sosuri@ucsc.edu\"\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    console.log(raw);\n    var proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    fetch(\"https://ferrous-portal-295000.wl.r.appspot.com/get_grid_data\", requestOptions).then(response => response.json()).then(result => {\n      if (result[0] == null || result[0] == undefined) {\n        document.getElementById(\"success\").innerHTML = \"\";\n        document.getElementById(\"error\").innerHTML = \"Incorrect Email or Password\";\n      } else {\n        document.getElementById(\"error\").innerHTML = \"\";\n        document.getElementById(\"success\").innerHTML = \"Login Successful!\";\n        this.props.history.push({\n          pathname: '/dashboard',\n          search: '?username=' + document.getElementById(\"email\").value,\n          state: {\n            detail: document.getElementById(\"email\").value\n          }\n        });\n      }\n    }).catch(error => console.log('error', error));\n  }\n\n  render() {\n    console.log(rows);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: 250,\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CustomizedTables, {\n      values: rows,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default ValueGetterGrid;","map":{"version":3,"sources":["/Users/sonalisuri/Desktop/erosc/Home_Page/src/views/examples/TableGrid.js"],"names":["React","DataGrid","CustomizedTables","getFullName","params","getValue","columns","field","headerName","width","rows","ValueGetterGrid","Component","constructor","props","componentDidMount","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","console","log","proxyurl","fetch","then","response","json","result","undefined","document","getElementById","innerHTML","history","push","pathname","search","value","state","detail","catch","error","render","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CustomizedTables from './TabularGrid';\n\nfunction getFullName(params) {\n  return `${params.getValue('firstName') || ''} ${\n    params.getValue('lastName') || ''\n  }`;\n}\n\nconst columns = [\n  { field: 'id', headerName: 'Form Number', width: 140 },\n  { field: 'primary_owner', headerName: 'Username', width: 140 },\n  { field: 'ship_type', headerName: 'Ship Type', width: 140 },\n  { field: 'proposed_ship_name', headerName: 'Ship Name', width: 140 },\n  { field: 'port', headerName: 'Port', width: 140 },\n  { field: 'registration_date', headerName: 'Registration Date', width: 170 },\n  { field: 'ship_lenght', headerName: 'Ship Length', width: 140 }\n  \n];\n\n\nvar rows = \n\n[\n    {   \"id\": \"No records\",\n        \n    }\n]\nclass ValueGetterGrid extends React.Component {\n  constructor(props) {\n\n    super(props);\n\n\n  }\n   componentDidMount() {\n\n  \n    // Default options are marked with *\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n            var raw = JSON.stringify({\"email\":\"sosuri@ucsc.edu\"});\n            \n            var requestOptions = {\n             \n              method: 'POST',\n              headers: myHeaders,\n              body: raw,\n              redirect: 'follow'\n            };\n            console.log(raw);\n            const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n            fetch(\"https://ferrous-portal-295000.wl.r.appspot.com/get_grid_data\", requestOptions)\n              .then(response => response.json())\n              .then(result => {if (result[0]==null || result[0]==undefined) {document.getElementById(\"success\").innerHTML=\"\";document.getElementById(\"error\").innerHTML=\"Incorrect Email or Password\"} \n              else {\n                document.getElementById(\"error\").innerHTML=\"\";\n                document.getElementById(\"success\").innerHTML=\"Login Successful!\";\n                this.props.history.push({\n                  pathname:'/dashboard',\n                  search: '?username='+document.getElementById(\"email\").value,\n                  state: { detail: document.getElementById(\"email\").value }});\n\n            }})\n              .catch(error => console.log('error', error));\n  \n\n}\n\nrender() {\n\n  console.log(rows);\n  return (\n    <div style={{ height: 250, width: '100%' }}>\n      <CustomizedTables  values={rows}/>\n    </div>\n  );\n}\n}\n  export default ValueGetterGrid;\n"]},"metadata":{},"sourceType":"module"}